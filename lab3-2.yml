- hosts: worker
  gather_facts: yes
  become: true
  become_method: sudo
  become_user: root
  tasks:
    # kubeadm init expect no swap
    - name: turn off swap
      shell: swapoff -a

    - name: comment out swap config from /etc/fstab
      replace:
        path: /etc/fstab
        regexp: '^/swapfile'
        replace: '#/swapfile'

    - name: apt-get update
      apt: update_cache=yes force_apt_get=yes

    - name: apt-get upgrade
      apt: upgrade=dist force_apt_get=yes

    - name: install docker.io
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - vim
        - docker.io
        - gnupg
        - gnupg2
        - bash-completion

    - name: Add kubernetes repo
      copy:
        dest: /etc/apt/sources.list.d/kubernetes.list
        content: |
          deb http://apt.kubernetes.io/ kubernetes-xenial main
          deb http://apt.kubernetes.io/ kubernetes-yakkety main

    - name: curl apt-key.gpg
      get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /tmp/apt-key.gpg

    # may need some refinement to not use shell in future
    - name: apt-key add
      shell: apt-key add /tmp/apt-key.gpg

    - name: apt-get update
      apt: update_cache=yes force_apt_get=yes

    - name: install kubeadm
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - kubeadm=1.18.1-00
        - kubelet=1.18.1-00
        - kubectl=1.18.1-00

    - name: apt-mark hold kubeadm kubelet kubectl
      shell: apt-mark hold kubeadm kubelet kubectl

    # propagate /etc/host
    - name: add /etc/hosts alias
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item.name }}.*$'
        line: "{{ item.ip }} {{ item.name }}"
        state: present
      with_items:
        - "{{ master_instances }}"
        - "{{ worker_instances }}"


- hosts: master
  gather_facts: yes
  become: true
  tasks:
    - name: kubeadm token create
      shell: kubeadm token create
      register: kubeadm_token

    - name: create discovery token 
      shell: >
          openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | 
          openssl rsa -pubin -outform der 2>/dev/null | 
          openssl dgst -sha256 -hex | awk '{ print $2}'
      register: discovery_token


# This should not work as worker node shouldn't have .kube/config as of the lab instruction
# however should work on master
#- hosts: worker
#  gather_facts: yes
#  become: true
#  tasks:
#    - name: kubectl get nodes
#      shell: kubectl --kubeconfig /home/{{ kubectl_user }}/.kube/config get nodes | grep -q "{{ inventory_hostname }}"
#      register: kubectl_get_nodes
#      ignore_errors: True
#
#    - name: debug
#      debug: "{{ kubectl_get_nodes.rc }}"
#
#    - name: kubeadm join
#      shell: >
#          kubeadm join --token {{ hostvars[master_instances[0].name].kubeadm_token.stdout }} 
#          {{ master_instances[0].name }}:6443 
#          --discovery-token-ca-cert-hash 
#          sha256:{{ hostvars[master_instances[0].name].discovery_token.stdout  }}
#      when: kubectl_get_nodes.rc != 0
# 
